# -*- coding: utf-8 -*-
import telebot
from telebot import types
import setting
import sqlite3
import logging
import os, sys
from requests.exceptions import ConnectionError, ReadTimeout

logging.basicConfig(format='%(asctime)s - %(levelname)s - %(message)s',
                    level=logging.INFO,
                    filename='bot.log'
                    )
bot = telebot.TeleBot(setting.token)

user_dict = {}
user_chats = 0


class User:

    def __init__(self, name):
        self.name = None
        self.age = None
        self.nums = None
        self.location = None
        self.experience = None
        self.format_work = None

        keys = ['name', 'age', 'nums', 'location', 'experience', 'format_work']
        for key in keys:
            self.key = None


@bot.message_handler(commands=['start'])  # —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
def start(message):
    conn = sqlite3.connect('bd/database_fusion.db')
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users(
        id INTEGER, 
        user_first_name TEXT, 
        user_last_name TEXT, 
        username TEXT
        )''')
    conn.commit()

    people_id = message.from_user.id
    cursor.execute(f"SELECT id FROM users WHERE id = {people_id}")
    data = cursor.fetchone()
    if data is None:
        USER_ID = [message.from_user.id, message.from_user.first_name, message.from_user.last_name,
                   message.from_user.username]
        cursor.execute("INSERT INTO users VALUES(?,?,?,?);", USER_ID)
        conn.commit()
    else:
        print("–°—Ç–∞—Ä—Ç –±–æ—Ç–∞ - –¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print(message.from_user.username)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    btn2 = types.KeyboardButton('üá¨üáß English')
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language", reply_markup=markup)


@bot.message_handler(content_types=['sticker'])
def send_sticker(message):
    print(message.sticker.file_id)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    # –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
    if message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        print('–ü–æ—Å–µ—Ç–∏–ª –±–æ—Ç - ' + message.chat.username)
        logging.info('Start bot - ' + message.chat.username)
        print(message.chat.username)
        print('_____________________')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        btn1 = types.KeyboardButton("üåê –°–∞–π—Ç")
        btn3 = types.KeyboardButton('üìÅ –ü—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('üìö –ë–ª–æ–≥')
        btn7 = types.KeyboardButton('üë• –ú—ã –≤ –í–ö')
        btn8 = types.KeyboardButton('üî• –ú—ã –Ω–∞ –•–∞–±—Ä')
        btn9 = types.KeyboardButton('üÖ±Ô∏è –ú—ã –Ω–∞ Behance')
        btn12 = types.KeyboardButton('üì∏ –ú—ã –≤ Instagram')
        btn10 = types.KeyboardButton('‚úçÔ∏èÔ∏è –ú—ã –Ω–∞ LinkedIn')
        btn11 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞')
        markup.add(btn2, btn5, btn1, btn3, btn4, btn7, btn8, btn9, btn10, btn12)
        bot.send_message(message.from_user.id, "üëã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Fusion Tech", reply_markup=markup)
        bot.send_message(message.from_user.id, 'üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

    if message.text == '—Ä—É—Å—Å–∫–∏–π':
        print('–ü–æ—Å–µ—Ç–∏–ª –±–æ—Ç')
        print(message.chat.username)
        print('_____________________')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        btn1 = types.KeyboardButton("üåê –°–∞–π—Ç")
        btn3 = types.KeyboardButton('üìÅ –ü—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('üìö –ë–ª–æ–≥')
        btn7 = types.KeyboardButton('üë• –ú—ã –≤ –í–ö')
        btn8 = types.KeyboardButton('üî• –ú—ã –Ω–∞ –•–∞–±—Ä')
        btn9 = types.KeyboardButton('üÖ±Ô∏è –ú—ã –Ω–∞ Behance')
        btn12 = types.KeyboardButton('üì∏ –ú—ã –≤ Instagram')
        btn10 = types.KeyboardButton('‚úçÔ∏èÔ∏è –ú—ã –Ω–∞ LinkedIn')
        btn11 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞')
        markup.add(btn2, btn5, btn1, btn3, btn4, btn7, btn8, btn9, btn10, btn12)
        bot.send_message(message.from_user.id, "üëã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Fusion Tech", reply_markup=markup)
        bot.send_message(message.from_user.id, 'üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

    if message.text == '–†—É—Å—Å–∫–∏–π':
        print('–ü–æ—Å–µ—Ç–∏–ª –±–æ—Ç')
        print(message.chat.username)
        print('_____________________')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        btn1 = types.KeyboardButton("üåê –°–∞–π—Ç")
        btn3 = types.KeyboardButton('üìÅ –ü—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('üìö –ë–ª–æ–≥')
        btn7 = types.KeyboardButton('üë• –ú—ã –≤ –í–ö')
        btn8 = types.KeyboardButton('üî• –ú—ã –Ω–∞ –•–∞–±—Ä')
        btn9 = types.KeyboardButton('üÖ±Ô∏è –ú—ã –Ω–∞ Behance')
        btn12 = types.KeyboardButton('üì∏ –ú—ã –≤ Instagram')
        btn10 = types.KeyboardButton('‚úçÔ∏èÔ∏è –ú—ã –Ω–∞ LinkedIn')
        btn11 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞')
        markup.add(btn2, btn5, btn1, btn3, btn4, btn7, btn8, btn9, btn10, btn12)
        bot.send_message(message.from_user.id, "üëã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Fusion Tech", reply_markup=markup)
        bot.send_message(message.from_user.id, 'üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')
    elif message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
        btn2 = types.KeyboardButton('üá¨üáß English')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language", reply_markup=markup)

    elif message.text == 'üåê –°–∞–π—Ç':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª —Å–∞–π—Ç, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –≤–µ–±-—Å–∞–π—Ç", setting.website))
        bot.send_message(message.from_user.id,
                         '–ù–∞—à–∞ –≥–æ—Ä–¥–æ—Å—Ç—å - –Ω–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è.üëç –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∞–π—Ç—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.website,
                         reply_markup=markup2, parse_mode='HTML')
    elif message.text == 'üì¢ –í–∞–∫–∞–Ω—Å–∏–∏':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –í–∞–∫–∞–Ω—Å–∏–∏, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (Sales Manager)')
        btn2 = types.KeyboardButton('UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä')
        btn3 = types.KeyboardButton('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Fullstack')
        btn5 = types.KeyboardButton('–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º')
        btn4 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3, btn5, btn4)
        bot.send_message(message.from_user.id,
                         '–†–∞–∑–¥–µ–ª: üì¢ –í–∞–∫–∞–Ω—Å–∏–∏\n \nüëçüèª –•–æ—á–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª—É—á—à–µ–µ?\n –¢–æ–≥–¥–∞ –Ω–∞–º –ø–æ –ø—É—Ç–∏! \nüì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.vacansies,
                         reply_markup=markup, parse_mode='HTML')
        bot.send_message(message.from_user.id, '‚¨á –û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏', reply_markup=markup)

    elif message.text == '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (Sales Manager)':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é", setting.SALES_MANAGER))
        bot.send_message(message.from_user.id,
                         '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (Sales Manager) -->>> –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–∞–∫–∞–Ω—Å–∏–∏ –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.SALES_MANAGER,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –¥–∏–∑–∞–π–Ω–µ—Ä, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é", setting.DESIGN))
        bot.send_message(message.from_user.id,
                         'UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä -->>> –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.DESIGN,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Fullstack':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é", setting.DEV_FULL))
        bot.send_message(message.from_user.id,
                         '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Fullstack -->>> –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.DEV_FULL,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn2 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        btn3 = types.KeyboardButton('üïµüèº –ù–∞–ø–∏—Å–∞—Ç—å –î–∞—à–µ (HR –∫–æ–º–ø–∞–Ω–∏–∏)')
        markup.add(btn1,btn2,btn3)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è", setting.VK_HR))
        bot.send_message(message.from_user.id,
                         '–£ –Ω–∞—Å –æ—Ç–∫—Ä—ã–ª–∞—Å—å –µ—â–µ –æ–¥–Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è, –Ω–æ —É–∂–µ –¥–ª—è –±–æ–ª–µ–µ –æ–ø—ã—Ç–Ω—ã—Ö —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π - '
                         '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º. –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã - –ø–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –∏ –∞—É–∫—Ü–∏–æ–Ω–æ–≤, '
                         '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ü–µ–Ω–∫–∞ –≤—ã–≥–æ–¥—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞,'
                         '—Ä–∞–±–æ—Ç–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ –ø–ª–æ—â–∞–¥–∫–∞–º–∏, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ –∞—É–∫—Ü–∏–æ–Ω–∞–º–∏ –∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–π '
                         '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π',
                         reply_markup=markup, parse_mode='HTML')
        bot.send_message(message.from_user.id,
                         '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –¥–µ—Ç–∞–ª—è–º –ø–∏—à–∏ '
                         '–î–∞—à–µ —Å—é–¥–∞ --->>>'
                         + setting.VK_HR,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üìÅ –ü—Ä–æ–µ–∫—Ç—ã':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –ü—Ä–æ–µ–∫—Ç—ã, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã", setting.projects))
        bot.send_message(message.from_user.id,
                         '–†–∞–∑–¥–µ–ª: üöÄ –ü—Ä–æ–µ–∫—Ç—ã\n \nüëçüèªüì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.projects,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üìö –ë–ª–æ–≥':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –ë–ª–æ–≥, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–æ—á–∏—Ç–∞—Ç—å –Ω–∞—à –±–ª–æ–≥", setting.blog))
        bot.send_message(message.from_user.id,
                         '–†–∞–∑–¥–µ–ª: üìö –ë–ª–æ–≥\n \nüëçüèª –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ç—É–¥–∏–∏, —Ä–∞–±–æ—Ç–∞ –∏ –∏–¥–µ–∏\n \nüì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.blog,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        btn1 = types.KeyboardButton("üåê –°–∞–π—Ç")
        btn3 = types.KeyboardButton('üìÅ –ü—Ä–æ–µ–∫—Ç—ã')
        btn4 = types.KeyboardButton('üìö –ë–ª–æ–≥')
        btn7 = types.KeyboardButton('üë• –ú—ã –≤ –í–ö')
        btn8 = types.KeyboardButton('üî• –ú—ã –Ω–∞ –•–∞–±—Ä')
        btn9 = types.KeyboardButton('üÖ±Ô∏è –ú—ã –Ω–∞ Behance')
        btn12 = types.KeyboardButton('üì∏ –ú—ã –≤ Instagram')
        btn10 = types.KeyboardButton('‚úçÔ∏èÔ∏è –ú—ã –Ω–∞ LinkedIn')
        btn11 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞')
        markup.add(btn2, btn5, btn1, btn3, btn4, btn7, btn8, btn9, btn10, btn12)
        bot.send_message(message.from_user.id, "üëÄ –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª", reply_markup=markup)

    elif message.text == 'üë• –ú—ã –≤ –í–ö':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –í–ö, —é–∑–µ—Ä -' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üïµüèº –ù–∞–ø–∏—Å–∞—Ç—å –î–∞—à–µ (HR –∫–æ–º–ø–∞–Ω–∏–∏)')
        btn2 = types.KeyboardButton('‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º')
        btn3 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.from_user.id, '‚¨á –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ', reply_markup=markup)
        bot.send_message(message.from_user.id,
                         '–ü–µ—Ä–µ–π—Ç–∏ –∫ –≥—Ä—É–ø–ø–µ –í–ö –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.VK,
                         reply_markup=markup, parse_mode='HTML')
    # Small talk

    elif message.text == '–ü—Ä–∏–≤–µ—Ç!':
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

    elif message.text == '–ø—Ä–∏–≤–µ—Ç!':
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

    elif message.text == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

    elif message.text == '–∫–∞–∫ –¥–µ–ª–∞?':
        bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')

    elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
        bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')

    elif message.text == '–∫–∞–∫ –¥–µ–ª–∞':
        bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')

    elif message.text == '–ó–∞—è–≤–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '–∑–∞—è–≤–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '—Ä–∞–±–æ—Ç–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '–≤–∞–∫–∞–Ω—Å–∏–∏':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '—Ö–æ—á—É –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn2 = types.KeyboardButton('üì¢ –í–∞–∫–∞–Ω—Å–∏–∏')
        btn5 = types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        bot.send_message(message.from_user.id, '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è', reply_markup=markup)
        markup.add(btn2, btn5)

    elif message.text == '–ø–æ–∫–∞':
        bot.send_message(message.from_user.id, '–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, –∑–∞—Ö–æ–¥–∏—Ç–µ –µ—â–µ')

    elif message.text == '–ü–æ–∫–∞':
        bot.send_message(message.from_user.id, '–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, –∑–∞—Ö–æ–¥–∏—Ç–µ –µ—â–µ')

    elif message.text == '–ù–æ–≤–æ—Å—Ç–∏':
        bot.send_message(message.from_user.id,
                         '–†–∞–∑–¥–µ–ª: üìö –ë–ª–æ–≥\n \nüëçüèª –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ç—É–¥–∏–∏, —Ä–∞–±–æ—Ç–∞ –∏ –∏–¥–µ–∏\n \nüì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.blog,
                         parse_mode='HTML')

    elif message.text == '–Ω–æ–≤–æ—Å—Ç–∏':
        bot.send_message(message.from_user.id,
                         '–†–∞–∑–¥–µ–ª: üìö –ë–ª–æ–≥\n \nüëçüèª –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ç—É–¥–∏–∏, —Ä–∞–±–æ—Ç–∞ –∏ –∏–¥–µ–∏\n \nüì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.blog,
                         parse_mode='HTML')

    elif message.text == 'üïµüèº –ù–∞–ø–∏—Å–∞—Ç—å –î–∞—à–µ (HR –∫–æ–º–ø–∞–Ω–∏–∏)':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –ù–∞–ø–∏—Å–∞—Ç—å –î–∞—à–µ, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è", setting.VK_HR))
        bot.send_message(message.from_user.id,
                         '–ü–æ –≤–æ–ø—Ä–æ—Å—É —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –ø–∏—à–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –Ω–∞—à–µ–º—É HR –î–∞—Ä—å–µ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.VK_HR,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == '‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ", setting.VK_GROUP_CHAT))
        bot.send_message(message.from_user.id,
                         '–ü–æ –æ–±—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏ –Ω–∞–º –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.VK_GROUP_CHAT,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == '‚úçÔ∏èÔ∏è –ú—ã –Ω–∞ LinkedIn':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª LinkedIn, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É", setting.LINKEDIN))
        bot.send_message(message.from_user.id, '\n –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.LINKEDIN,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üÖ±Ô∏è –ú—ã –Ω–∞ Behance':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª Behance, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É", setting.BEHANCE))
        bot.send_message(message.from_user.id,
                         'With our expertise,we can suggest the best solutions for your project to make it as good as possible.'
                         '\n –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.BEHANCE,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üì∏ –ú—ã –≤ Instagram':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª Instagram, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        markup2 = types.InlineKeyboardMarkup()
        markup2.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É", setting.INSTAGRAM))
        bot.send_message(message.from_user.id,
                         'üèÜ–¢–û–ü-100 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –†–æ—Å—Å–∏–∏ // –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞'
                         '\nüìçTaganrog // Yerevan // Claymont'
                         '\n –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.INSTAGRAM,
                         reply_markup=markup2, parse_mode='HTML')

    elif message.text == 'üî• –ú—ã –Ω–∞ –•–∞–±—Ä':
        logging.info('–û—Ç–∫—Ä—ã—Ç —Ä–∞–∑–¥–µ–ª –•–∞–±—Ä, —é–∑–µ—Ä - ' + message.chat.username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn2 = types.KeyboardButton('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏')
        btn3 = types.KeyboardButton('üì∞ –í–∞–∫–∞–Ω—Å–∏–∏')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.from_user.id,
                         '–ù–∞–π–¥–∏ —Ä–∞–±–æ—Ç—É –ø–æ –¥—É—à–µ üéâ \n –í –±–∞–∑–µ –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä—ã –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏'
                         '\n –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.HABR,
                         reply_markup=markup, parse_mode='HTML')

    elif message.text == '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1)
        bot.send_message(message.from_user.id,
                         "–ú—ã Fusion Tech - –∫–æ–º–ø–∞–Ω–∏—è, —É–∂–µ –±–æ–ª–µ–µ 5-—Ç–∏ –ª–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–µ–± –∏ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–ø—É—Å–∫ –≤ –º–∏—Ä IT —á–µ—Ä–µ–∑ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–¥ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ–º –æ–ø—ã—Ç–Ω—ã—Ö –∫—É—Ä–∞—Ç–æ—Ä–æ–≤.")
        bot.send_message(message.from_user.id,
                         '–ü–æ—á–∏—Ç–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ ' + setting.HABR,
                         reply_markup=markup, parse_mode='HTML')

    elif message.text == 'üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É':
        logging.info('–°—Ç–∞—Ä—Ç –∑–∞—è–≤–∫–∏' + message.chat.username)
        chat_id = message.chat.id
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        msg = bot.send_message(chat_id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.", reply_markup=board)
        bot.register_next_step_handler(msg, name_step)


def name_step(message, user=None):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        name = message.text
        user = User(name)
        user_dict[chat_id] = user
        msg = bot.send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", reply_markup=board)
        bot.register_next_step_handler(msg, process_age_step)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def process_age_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        age = message.text
        if not age.isdigit():
            msg = bot.send_message(chat_id, '–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º, –≤–≤–µ–¥–∏ –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ: ')
            bot.register_next_step_handler(msg, process_age_step)
            return
        user = user_dict[chat_id]
        user.age = age
        msg = bot.send_message(chat_id, '–ö –∫–∞–∫–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å?', reply_markup=board )
        bot.register_next_step_handler(msg, process_spec_step)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def process_spec_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        language = message.text
        user = user_dict[chat_id]
        user.languages = language
        msg = bot.send_message(chat_id, '–õ–æ–∫–∞—Ü–∏—è', reply_markup=board)
        bot.register_next_step_handler(msg, process_location_step)
    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def process_location_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        location = message.text
        user = user_dict[chat_id]
        user.location = location
        msg = bot.send_message(chat_id, '–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã (—É–¥–∞–ª–µ–Ω–Ω–æ/–æ—Ñ–∏—Å)', reply_markup=board)
        bot.register_next_step_handler(msg, process_format_work_step)
    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def process_format_work_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        format_work = message.text
        user = user_dict[chat_id]
        user.format_work = format_work
        msg = bot.send_message(chat_id, '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã?', reply_markup=board)
        bot.register_next_step_handler(msg, process_experience_step)
    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def process_experience_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        experience = message.text
        user = user_dict[chat_id]
        user.experience = experience
        msg = bot.send_message(chat_id,
                               '–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å(GitHub,Behance,Dribbble,Figma,VK) –µ—Å–ª–∏ –Ω–µ—Ç - –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ—Ç: ', reply_markup=board)
        bot.register_next_step_handler(msg, process_git_acc_step)
    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def process_git_acc_step(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        git_acc1 = message.text
        user = user_dict[chat_id]
        user.git_acc = git_acc1
        msg = bot.send_message(chat_id, "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=board)
        bot.register_next_step_handler(msg, contnums)

    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def contnums(message):
    try:
        board = types.InlineKeyboardMarkup()
        cancel = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="–û—Ç–º–µ–Ω–∞")
        board.add(cancel)
        chat_id = message.chat.id
        nums = message.text
        user = user_dict[chat_id]
        user.nums = nums
        chat_id = message.chat.id
        msg = bot.send_message(chat_id, "–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏", reply_markup=board)
        bot.register_next_step_handler(msg, send_z)
    except Exception as e:
        bot.reply_to(message, '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


def send_z(message):
    chat_id = message.chat.id
    first_name = message.chat.first_name
    last_name = message.chat.last_name
    user_name = message.chat.username
    z = message.text  # text user
    app_text = []
    app_name_first = []
    app_name_last = []
    app_username = []
    app_name_first.append(first_name)
    app_name_last.append(last_name)
    app_username.append(user_name)
    app_text.append(z)
    user = user_dict[chat_id]
    user_chats = message.from_user.id
    bot.send_message(setting.admin_id_ugraswim, f'–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –æ—Ç {app_name_first[0]} {app_name_last[0]} !\n'
                     + f'username –≤ —Ç–≥ = @{app_username[0]} \n'
                     + f'–í–æ–∑—Ä–∞—Å—Ç  -  {user.age} \n'
                     + f'–õ–æ–∫–∞—Ü–∏—è  -  {user.location} \n'
                     + f'–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã  -  {user.experience} \n'
                     + f'–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {user.languages} \n'
                     + f'–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏: - {app_text[0]} \n'
                     + f'–ü—Ä–æ—Ñ–∏–ª—å github/—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å  -  {user.git_acc} \n'
                     + f'–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã  -  {user.format_work} \n'
                     + f'–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {user.nums} \n'

                     + f'ID —é–∑–µ—Ä–∞: {user_chats}')
    bot.send_message(setting.admin_hr_id, f'–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –æ—Ç {app_name_first[0]} {app_name_last[0]} !\n'
                     + f'username –≤ —Ç–≥ = @{app_username[0]} \n'
                     + f'–í–æ–∑—Ä–∞—Å—Ç  -  {user.age} \n'
                     + f'–õ–æ–∫–∞—Ü–∏—è  -  {user.location} \n'
                     + f'–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã  -  {user.experience} \n'
                     + f'–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {user.languages} \n'
                     + f'–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏: - {app_text[0]} \n'
                     + f'–ü—Ä–æ—Ñ–∏–ª—å github/—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å  -  {user.git_acc} \n'
                     + f'–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã  -  {user.format_work} \n'
                     + f'–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {user.nums} \n'

                     + f'ID —é–∑–µ—Ä–∞: {user_chats}')
    conn = sqlite3.connect('bd/database_fusion.db')
    cursor = conn.cursor()
    user = user_dict[chat_id]
    cursor.execute('''CREATE TABLE IF NOT EXISTS orders(
            id INTEGER,
            user_first_name TEXT,
            user_last_name TEXT,
            username TEXT
            location TEXT
            special TEXT
            nums TEXT
            );''')
    conn.commit()
    id_people = message.from_user.id
    cursor.execute(f"SELECT id FROM orders WHERE id = {id_people}")
    data = cursor.fetchone()
    if data is None:
        order = [message.from_user.id,
                 message.from_user.first_name,
                 message.from_user.last_name,
                 message.from_user.username,
                 user.location,
                 user.languages,
                 user.nums]
        cursor.execute("INSERT INTO orders VALUES(?,?,?,?,?,?,?);", order)
        conn.commit()
    else:
        print("–¢–∞–∫–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        logging.warning('–•–æ—Ç–µ–ª –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–æ —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª - ' + message.chat.username)
    app_name_first.clear()
    app_name_last.clear()
    app_username.clear()
    app_text.clear()
    logging.info('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç - ' + message.chat.username)
    bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "–û—Ç–º–µ–Ω–∞":
            logging.warning('–•–æ—Ç–µ–ª –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–∞–ª –æ—Ç–º–µ–Ω–∞ - ' + call.message.chat.username)
            msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                        text='–û—Ç–º–µ–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏...üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')
            bot.clear_step_handler(msg)


try:
    bot.infinity_polling(timeout=90, long_polling_timeout=5)
except (ConnectionError, ReadTimeout) as e:
    sys.stdout.flush()
    os.execv(sys.argv[0], sys.argv)
else:
    bot.infinity_polling(timeout=90, long_polling_timeout=5)
